{"version":3,"file":"index.umd.js","sources":["../index.js"],"sourcesContent":["const KEYCODE = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n}\n\nconst state = new Map()\n\nexport const rovingIndex = ({element:rover, target:selector}) => {\n  // this api allows empty or a query string\n  const target_query = selector || ':scope *'\n  const targets = rover.querySelectorAll(target_query)\n  const startingPoint = targets[0]\n\n  // take container out of the focus flow\n  rover.tabIndex = -1\n  // and all the children\n  targets.forEach(a => a.tabIndex = -1)\n  // except the first target, that accepts focus\n  startingPoint.tabIndex = 0\n\n  // with the roving container as the key\n  // save some state and handy references\n  state.set(rover, {\n    targets,\n    active: startingPoint,\n    index: 0,\n  })\n\n  // when container or children get focus\n  const onFocusin = _ => {\n    if (state.get('last_rover') == rover) return\n\n    activate(rover, state.get(rover).active)\n    state.set('last_rover', rover)\n  }\n  rover.addEventListener('focusin', onFocusin)\n\n  // watch for arrow keys\n  const onKeydown = e => {\n    switch (e.keyCode) {\n      case KEYCODE.RIGHT:\n      case KEYCODE.DOWN:\n        e.preventDefault()\n        focusNextItem(rover)\n        break\n      case KEYCODE.LEFT:\n      case KEYCODE.UP:\n        e.preventDefault()\n        focusPreviousItem(rover)\n        break\n    }\n  }\n  rover.addEventListener('keydown', onKeydown)\n\n  const cleanup = _ => {\n    rover.removeEventListener('focusin', onFocusin)\n    rover.removeEventListener('keydown', onKeydown)\n    rover.removeEventListener('DOMNodeRemoved', cleanup)\n\n    state.delete(rover)\n    targets.forEach(a => a.tabIndex = '')\n  }\n\n  rover.addEventListener('DOMNodeRemovedFromDocument', cleanup)\n}\n\nconst focusNextItem = rover => {\n  const rx = state.get(rover)\n\n  // increment state index\n  rx.index += 1\n\n  // clamp navigation to target bounds\n  if (rx.index > rx.targets.length - 1)\n    rx.index = rx.targets.length - 1\n\n  // use rover index state to find next\n  let next = rx.targets[rx.index]\n\n  // found something, activate it\n  next && activate(rover, next)\n}\n\nconst focusPreviousItem = rover => {\n  const rx = state.get(rover)\n\n  // decrement from the state index\n  rx.index -= 1\n\n  // clamp to 0 and above only\n  if (rx.index < 1)\n    rx.index = 0\n\n  // use rover index state to find next\n  let prev = rx.targets[rx.index]\n\n  // found something, activate it\n  prev && activate(rover, prev)\n}\n\nconst activate = (rover, item) => {\n  const rx = state.get(rover)\n\n  // remove old tab index item\n  rx.active.tabIndex = -1\n\n  // set new active item and focus it\n  rx.active = item\n  rx.active.tabIndex = 0\n  rx.active.focus()\n}\n"],"names":["state","Map","activate","rover","item","rx","get","active","tabIndex","focus","element","targets","querySelectorAll","target","startingPoint","forEach","a","set","index","onFocusin","_","addEventListener","onKeydown","e","keyCode","preventDefault","length","next","focusNextItem","prev","focusPreviousItem","cleanup","removeEventListener"],"mappings":"kOAAA,IAOMA,EAAQ,IAAIC,IA+FZC,EAAW,SAACC,EAAOC,GACvB,IAAMC,EAAKL,EAAMM,IAAIH,GAGrBE,EAAGE,OAAOC,UAAY,EAGtBH,EAAGE,OAASH,EACZC,EAAGE,OAAOC,SAAW,EACrBH,EAAGE,OAAOE,uBAtGe,gBAAUN,IAARO,QAGrBC,EAAUR,EAAMS,mBAHoBC,QAET,YAE3BC,EAAgBH,EAAQ,GAG9BR,EAAMK,UAAY,EAElBG,EAAQI,QAAQ,SAAAC,UAAKA,EAAER,UAAY,IAEnCM,EAAcN,SAAW,EAIzBR,EAAMiB,IAAId,EAAO,CACfQ,QAAAA,EACAJ,OAAQO,EACRI,MAAO,IAIT,IAAMC,EAAY,SAAAC,GACZpB,EAAMM,IAAI,eAAiBH,IAE/BD,EAASC,EAAOH,EAAMM,IAAIH,GAAOI,QACjCP,EAAMiB,IAAI,aAAcd,KAE1BA,EAAMkB,iBAAiB,UAAWF,GAGlC,IAAMG,EAAY,SAAAC,GAChB,OAAQA,EAAEC,SACR,KAvCG,GAwCH,KAvCE,GAwCAD,EAAEE,iBAwBY,SAAAtB,GACpB,IAAME,EAAKL,EAAMM,IAAIH,GAGrBE,EAAGa,OAAS,EAGRb,EAAGa,MAAQb,EAAGM,QAAQe,OAAS,IACjCrB,EAAGa,MAAQb,EAAGM,QAAQe,OAAS,GAGjC,IAAIC,EAAOtB,EAAGM,QAAQN,EAAGa,OAGzBS,GAAQzB,EAASC,EAAOwB,GArClBC,CAAczB,GACd,MACF,KA9CE,GA+CF,KA9CA,GA+CEoB,EAAEE,iBAoCgB,SAAAtB,GACxB,IAAME,EAAKL,EAAMM,IAAIH,GAGrBE,EAAGa,OAAS,EAGRb,EAAGa,MAAQ,IACbb,EAAGa,MAAQ,GAGb,IAAIW,EAAOxB,EAAGM,QAAQN,EAAGa,OAGzBW,GAAQ3B,EAASC,EAAO0B,GAjDlBC,CAAkB3B,KAIxBA,EAAMkB,iBAAiB,UAAWC,GAWlCnB,EAAMkB,iBAAiB,6BATP,SAAVU,EAAUX,GACdjB,EAAM6B,oBAAoB,UAAWb,GACrChB,EAAM6B,oBAAoB,UAAWV,GACrCnB,EAAM6B,oBAAoB,iBAAkBD,GAE5C/B,SAAaG,GACbQ,EAAQI,QAAQ,SAAAC,UAAKA,EAAER,SAAW"}