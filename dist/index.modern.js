const e={LEFT:37,UP:38,RIGHT:39,DOWN:40},t=new Map,n=({element:n,target:s})=>{const c="rtl"===window.getComputedStyle(document.documentElement).direction,r=n.querySelectorAll(s||":scope *"),i=r[0];n.tabIndex=-1,r.forEach(e=>e.tabIndex=-1),i.tabIndex=0,t.set(n,{targets:r,active:i,index:0});const v=e=>{t.get("last_rover")!=n&&(a(n,t.get(n).active),t.set("last_rover",n))};n.addEventListener("focusin",v);const l=t=>{switch(t.keyCode){case e[c?"LEFT":"RIGHT"]:case e.DOWN:t.preventDefault(),o(n);break;case e[c?"RIGHT":"LEFT"]:case e.UP:t.preventDefault(),d(n)}};n.addEventListener("keydown",l);const x=e=>{n.removeEventListener("focusin",v),n.removeEventListener("keydown",l),n.removeEventListener("DOMNodeRemoved",x),t.delete(n),r.forEach(e=>e.tabIndex="")};n.addEventListener("DOMNodeRemovedFromDocument",x)},o=e=>{const n=t.get(e);n.index+=1,n.index>n.targets.length-1&&(n.index=n.targets.length-1);let o=n.targets[n.index];o&&a(e,o)},d=e=>{const n=t.get(e);n.index-=1,n.index<1&&(n.index=0);let o=n.targets[n.index];o&&a(e,o)},a=(e,n)=>{const o=t.get(e);o.active.tabIndex=-1,o.active=n,o.active.tabIndex=0,o.active.focus()};export{n as rovingIndex};
//# sourceMappingURL=index.modern.js.map
